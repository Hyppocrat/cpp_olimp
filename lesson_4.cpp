#include<iostream>
#include<algorithm>
#include<string>

using namespace std;


// есть много чисел (например, до 1000000), каждое лежит в пределах от 0 до 1000. 
// Отсортировать эти числа в порядке возрастания
// -1000..1000
// -1000 -> 0
// -999 -> 1
// ...
// 1000 -> 2000
int a[300]; // a[i] - сколько раз число i встречается в массиве
//если в массиве больше 100000 элементов - объявляем до main
int main(){
    memset(a, 0, sizeof(a)); // ставим только нули и -1!
    //fill(начало отрезка в массиве, конец отрезка в массиве, число);
    //fill(a + 1, a + 1013, 0);
    //cout << a[0] << " " << a[500];
    /*int n;
    cin >> n;
    for(int i = 0; i < n; i++){
        int t;
        cin >> t;
        a[t + 1000]++;
    }
    for(int i = 0; i < 2001; i++){
        for(int j = 0; j < a[i]; j++){
            cout << i - 1000 << " ";
        }
    }*/
    /*for(char i = 'a'; i <= 'z'; i++){
        if (a[i] > 0){
            cout << i << ": " << a[i] << endl;
        }
    }*/
    string s;
    cin >> s;
    for(int i = 0; i < s.size(); i++){
        a[s[i]]++;
    }
    // время работы цикла: (длина строки) * 26
    // инвариант: если символ есть в строке, то он может
    // встречаться любое ненулевое число раз (от 1 до len(s))
    // len(s) - длина строки
    // сначала найдем те символы, которые встречаются в строке
    // 1 раз (то есть a[символа] == 1), потом - те, которые 
    // встречаются 2 раза, ...
    // в конце - те, которые встречаются len(s) раз.
    int cnt = 0;
    for(int i = 1; i <= s.size(); i++){
        for(char j = 'a'; j <= 'z'; j++){
            cnt++;
            if (a[j] == i){
                cout << j << ": " << a[j] << endl;
            }
        }
    }
    cout << cnt;
    /*for(int i = 0; i < 256; i++){
        for(int j = 0; j < a[i]; j++){
            cout << char(i);
        }
    }*/
}


#include<iostream>
#include<algorithm>
#include<string>

using namespace std;

int main(){
    int n, a[10013];
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    sort(a, a + n); // сортирует массив в порядке возрастания
    reverse(a, a + n); //переворачивает массив
    for(int i = 0; i < n; i++){
        cout << a[i] << " ";
    }
}
